import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.util.Random;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;

public class DrawingPanel extends JPanel {
    //arraylist containing all the Parts the user has put on the face
    Cube cube;
    int distance = 300;
    boolean surface = true;
    Vector rotationVector;
    
    public DrawingPanel() {
	setPreferredSize(new Dimension(300,300));
	setBackground(Color.white);
	rotationVector = new Vector(0,1,0);
    }

    public void paintComponent(Graphics G) {
        super.paintComponent(G);
	Graphics2D g2d = (Graphics2D)G;
	//move origin to the center of the canvas
	g2d.translate(getWidth()/2,getHeight()/2);
	//positive y goes up
	g2d.scale(1,-1);
	if(cube != null) {
	    if(surface == true) {
		cube.surface(g2d,distance);
	    }
	    else{
		rotationVector.normalize();
		rotationVector.scale(140);
		double[] point = rotationVector.get2D(distance);
		g2d.drawLine(0,0,(int)point[0],(int)point[1]);
		cube.wireFrame(g2d,distance);
	    }
	}
    }

    public void setRotationVector(int x, int y, int z) {
	rotationVector.set(x,y,z);
	repaint();
    }

    public void arbitraryRotate(Double degree) {
	cube.arbitratyRotate(degree, rotationVector);
	repaint();
    }
    
    public void loadShape(String fileName) {
	try {
            //Load file
            File inputFile = new File(fileName);
            Scanner scan = new Scanner(inputFile);
	    String line;
            //first integer in the map file is the map size
            scan.nextLine();
	    scan.nextLine();
	    scan.nextLine();
	    int vertices = scan.nextInt();
	    scan.nextLine();
	    int faceNumber = scan.nextInt();
	    scan.nextLine();
	    scan.nextLine();
	    scan.nextLine();
	    double x,y,z;
	    Vertex[] vList = new Vertex[vertices];
	    for(int i=0;i<vertices;i++) {
		x = scan.nextDouble();
		y = scan.nextDouble();
		z = scan.nextDouble();
		Vertex current = new Vertex(x,y,z);
		vList[i] = current;
	    }
	    cube = new Cube(vList);
	    scan.nextLine();
	    scan.nextLine();
	    scan.nextLine();
	    int nVertices = 0;
	    for(int i=0;i<faceNumber;i++) {
		line = scan.nextLine();
		String[] split = line.split(" ");
		int[] v = new int[split.length-1];
		for(int j=0;j<split.length-1;j++) {
		    int nFace = Integer.parseInt(split[j]);
		    v[j] = nFace;
		}
		cube.setFace(v);
	    }
	    cube.setVertQuant(nVertices);
	}          
        catch(FileNotFoundException e) {
            System.out.println("ERROR! " + e);      
        }
    }

    public void rotate(double degree, String axis) {
        cube.rotate(degree,axis);
	repaint();
    }
    public void scale(double a) {
        cube.scale(a);
	repaint();
    }
    public void setDistance(int d) {
	distance = d;
	repaint();
    }
    public void changeSurface() {
	if(surface == true) {
	    surface = false;
	}
	else{
	    surface = true;
	}
	repaint();
    }
}
